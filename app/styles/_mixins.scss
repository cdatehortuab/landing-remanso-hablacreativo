@import "./functions";

@mixin font-face(
  $name,
  $path,
  $exts: eot woff2 woff ttf svg,
  $append: null,
  $weight: null,
  $style: null,
  $stretch: null
) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(
      map-has-key($extmods, $ext),
      $ext + map-get($extmods, $ext),
      $ext
    );
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append(
      $src,
      url(quote($path + $append + "." + $extmod)) format(quote($format)),
      comma
    );
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
    font-stretch: $stretch;
		src: $src;
	}
}

@mixin for-size($range) {
  $phone-upper-boundary: 600px;
  $tablet-portrait-upper-boundary: 900px;
  $tablet-landscape-upper-boundary: 1200px;
  $desktop-upper-boundary: 1800px;

  @if $range == phone-only {
    @media (max-width: #{$phone-upper-boundary - 1}) { @content; }
  } @else if $range == tablet-portrait-up {
    @media (min-width: $phone-upper-boundary) { @content; }
  } @else if $range == tablet-landscape-up {
    @media (min-width: $tablet-portrait-upper-boundary) { @content; }
  } @else if $range == desktop-up {
    @media (min-width: $tablet-landscape-upper-boundary) { @content; }
  } @else if $range == big-desktop-up {
    @media (min-width: $desktop-upper-boundary) { @content; }
  }
}
